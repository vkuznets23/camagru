name: Build and Deploy

on:
  push:
    branches:
      - main

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
      - name: Install dependencies
        run: npm ci
        working-directory: camagruApp
      - name: Generate Prisma client
        run: npx prisma generate
        working-directory: camagruApp
      - name: Build
        run: npm run build
        working-directory: camagruApp

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 7

      - name: Install Vercel CLI
        run: pnpm add --global vercel@latest

      - name: Deploy to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
        working-directory: camagruApp

  tag_release:
    needs: build-test-deploy
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Bump version and push tag
        uses: anothrNick/github-tag-action@8c8163ef62cf9c4677c8e800f36270af27930f42
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BUMP: patch
          DRY_RUN: false

  notify_discord:
    needs: [build-test-deploy, tag_release]
    runs-on: ubuntu-latest
    steps:
      - name: Send Discord notification
        uses: rjstone/discord-webhook-notify@v2
        with:
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK_URL }}
          severity: ${{ needs.build-and-test.result == 'success' && needs.deploy-to-vercel.result == 'success' && needs.tag_release.result == 'success' && 'info' || 'error' }}
          details: |
            Repository: ${{ github.repository }}
            Workflow: ${{ github.workflow }}
            Event: ${{ github.event_name }}
            Actor: ${{ github.actor }}
            Commit: ${{ github.sha }}
            Status: ${{ needs.build-and-test.result == 'success' && needs.deploy-to-vercel.result == 'success' && needs.tag_release.result == 'success' && '✅ All jobs succeeded' || '❌ Some jobs failed' }}
